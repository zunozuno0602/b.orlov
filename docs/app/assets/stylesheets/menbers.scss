

$mainColor: #f7f7f7;
$backgroundImage: url(orlov8.JPG);
$maxNumberOfElements: 8;

* {
  &,
  &:before,
  &:after {
    box-sizing: border-box;
    transition: all 200ms ease;
  }
}

body {
  background: $backgroundImage;
  background-size: cover;
  background-position: center;
  font-family: 'Source Sans Pro', sans-serif;
}


@mixin generateClasses {
  @for $lastElementNo from 1 through $maxNumberOfElements {
    // find the correct width
    &:last-child:nth-child(#{$lastElementNo}):before {
      width: 100% / $lastElementNo;
    }
    
    @for $hoveredElement from 1 through $lastElementNo {
      // try to figure out which one is the one hovered
      &:nth-child(#{$hoveredElement}):nth-last-child(#{$lastElementNo - $hoveredElement + 1}):focus ~ :last-child:before,
      &:nth-child(#{$hoveredElement}):nth-last-child(#{$lastElementNo - $hoveredElement + 1}):last-child:focus:before{
        left: ($hoveredElement - 1) * 100% / $lastElementNo;
      }
        
      &:nth-child(#{$hoveredElement}):nth-last-child(#{$lastElementNo - $hoveredElement + 1}):last-child:before {
        left: 0;
      }
    }
  }
}

nav {
  display: table;
  table-layout: fixed;
  margin: 40vh auto;
  width: 80%;
  text-align: center;
  position: relative;
  overflow: hidden;

  a {
    display: table-cell;    
    width: 1%;
    color: $mainColor;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 1px;

    @include generateClasses();
    
    span {
      position: relative;
      display: block;
      padding: 1rem;
      z-index: 10;
    }
    
    &:last-child:before {
      content: '';
      display: block;
      position: absolute;
      bottom: 0;
      background: #F9A926;
      height: 4px;
      z-index: -1;
    }

  }
}
.ripple {
    position: relative;
    overflow: hidden;
}
.ripple:after {
    content: "";
    background: transparentize($mainColor, 0.7);
    display: block;
    position: absolute;
    border-radius: 50%;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    width: 450px;
    height: 450px;
    margin: auto;
    opacity: 0;
    transition: all 1s;
    z-index: 1;
}
.ripple:active:after {
    height: 10px;
    width: 10px;
    opacity: 1;
    transition: 0s;
}

::selection {
  background: rgba(255,255,255,0.3)
}





// 元のやつ
// .wrapper{
//   position:relative;
//   z-index: 1;

// }
// .slider {
//   /*↑z-indexの値をh1のz-indexの値よりも小さくして背景に回す*/
//   height: 100vh;/*スライダー全体の縦幅を画面の高さいっぱい（100vh）にする*/
// }
// /*　背景画像設定　*/

// .slider-item01 {
//   background-image: url(orlov8.JPG);
//   display: flex;
//   height: 100vh;
//   width: 100%;
//   background-size: cover;
//   background-position: center;
//   .members{
//     font-size: 40px;
//     color: white;
//     font-family: 'Oswald', sans-serif;
//     margin-top: 300px;
//     text-align: center;
//     .name{
//       border-bottom: dashed 2px #F9A926;
//       font-size: 20px;
//       display: flex;
//       justify-content: space-between;
//       width: 1200px;
//       margin-left: 40px;
//       margin-top: 20px;
//       list-style: none;
//       .namebtn{
//       }
//     }
//   }



  
// }

// .slider-item02 {
//   background:url(rqy-tatsuki.jpg);
// }

// .slider-item03 {
//   background:url(rqy-kazuki.jpg);
// }

// .slider-item04{
//   background: url(rqy-suzuki.jpg);
// }

// .slider-item05{
//   background: url(rqy-daaya.jpg);
// }

// .slider-item06{
//   background: url(rqy-ariel.jpg);
// }

// .slider-item07{
//   background: url(rqy-yuu.jpg);
// }
// .slider-item {
//   width: 100%;/*各スライダー全体の横幅を画面の高さいっぱい（100%）にする*/
//   height:100vh;/*各スライダー全体の縦幅を画面の高さいっぱい（100vh）にする*/
//   background-repeat: no-repeat;/*背景画像をリピートしない*/
//   background-position: center;/*背景画像の位置を中央に*/
//   background-size: cover;/*背景画像が.slider-item全体を覆い表示*/
// }

// /*矢印の設定*/

// .slick-prev, 
// .slick-next {
//   position: absolute;
//   z-index: 3;
//   top: 42%;
//   cursor: pointer;/*マウスカーソルを指マークに*/
//   outline: none;/*クリックをしたら出てくる枠線を消す*/
//   border-top: 2px solid #fff;/*矢印の色*/
//   border-right: 2px solid #fff;/*矢印の色*/
//   height: 25px;
//   width: 25px;
// }

// .slick-prev {/*戻る矢印の位置と形状*/
//   left:2.5%;
//   transform: rotate(-135deg);
// }

// .slick-next {/*次へ矢印の位置と形状*/
//   right:2.5%;
//   transform: rotate(45deg);
// }

// /*ドットナビゲーションの設定*/

// .slick-dots {
//   position: relative;
//   z-index: 3;
//   text-align:center;
//   margin:-50px 0 0 0;/*ドットの位置*/
// }

// .slick-dots li {
//   display:inline-block;
//   margin:0 5px;
// }

// .slick-dots button {
//   color: transparent;
//   outline: none;
//   width:8px;/*ドットボタンのサイズ*/
//   height:8px;/*ドットボタンのサイズ*/
//   display:block;
//   border-radius:50%;
//   background:#fff;/*ドットボタンの色*/
// }

// .slick-dots .slick-active button{
//   background:#333;/*ドットボタンの現在地表示の色*/
// }


// /*========= レイアウトのためのCSS ===============*/
// .ul{
//   margin:0;
//   padding: 0;
//   list-style: none;
// }

// .a{
//   color: #fff;
// }

// a:hover
// a:active{
//   text-decoration: none;
// }

// // .h1{ 
// //   position: absolute;
// //   z-index: 2;
// //   top: 50%;
// //   left: 50%;
// //   transform: translate(-50%, -50%);
// //   text-align: center;
// //   font-size:6vw;
// //   letter-spacing: 0.1em;
// //   text-transform: uppercase;
// //   color: #fff;
// // }

